buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'bliss-workout'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

//configurations {
//    providedRuntime
//}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
//	compile('org.springframework.boot:spring-boot-starter-security')
    runtime('org.postgresql:postgresql')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile 'javax.servlet:jstl:1.2'
//	compile 'org.hibernate:hibernate-core:5.1.0.Final'
    compile 'org.apache.tomcat.embed:tomcat-embed-jasper:8.0.8'
//    compile 'mysql:mysql-connector-java:5.1.39'
//    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.3' //version required
}
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir 
    rename {
        'bliss-workout.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('bliss-workout.jar').delete()
}
//eclipse {
//	classpath {
//		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
//		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
//	}
//}
